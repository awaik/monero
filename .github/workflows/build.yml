name: ci/gh-actions/cli

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  REMOVE_BUNDLED_BOOST : rm -rf /usr/local/share/boost
  APT_INSTALL_LINUX: 'sudo apt install -y curl unzip automake build-essential file pkg-config git python3 python-is-python3 libtool libtinfo5 cmake clang ccache'
  APT_SET_CONF: |
        echo "Acquire::Retries \"3\";"         | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::http::Timeout \"120\";" | sudo tee -a /etc/apt/apt.conf.d/80-custom
        echo "Acquire::ftp::Timeout \"120\";"  | sudo tee -a /etc/apt/apt.conf.d/80-custom
  CCACHE_SETTINGS: |
        ccache --max-size=350M
        ccache --set-config=compression=true

jobs:

  build-android:
    runs-on: ubuntu-latest
    env:
      CCACHE_TEMPDIR: /tmp/.ccache-temp
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: actions/cache@v3
      with:
        path: ~/.ccache
        key: ccache-ubuntu-build-${{ github.sha }}
        restore-keys: ccache-ubuntu-build-

    - name: Remove bundled Boost.
      run: ${{env.REMOVE_BUNDLED_BOOST}}

    - name: Set apt.conf
      run: ${{env.APT_SET_CONF}}

    - name: Update apt.
      run: sudo apt update -y

    - name: Install dependencies.
      run: ${{env.APT_INSTALL_LINUX}}

    - name: Build.
      run: |
        ${{env.CCACHE_SETTINGS}}
        cd build_scripts/android
        ./build_all.sh

#  build-macos:
#    runs-on: macos-13
#    steps:
#    - uses: actions/checkout@v3
#      with:
#        submodules: recursive
#
#    - name: Build.
#      run: |
#        cd build_scripts/macos
#        ./build_all.sh

#  build-ios:
#    runs-on: macos-13
#    steps:
#    - uses: actions/checkout@v3
#      with:
#        submodules: recursive
#
#    - name: Build.
#      run: |
#        cd build_scripts/ios
#        ./build_all.sh